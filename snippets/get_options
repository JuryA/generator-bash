get_options() {
    _SILENT=<% if (silent) {%>:<%}%>
    _OPTSTRING="${_SILENT}<% for(var i=0; i<options.length; i++) {%><%= options[i].varShort%>:<% } %><% for(var i=0; i<flags.length; i++) {%><%= flags[i].varShort%><% } %>-:"
    while getopts "${_OPTSTRING}" _OPTION
    do
      case "${_OPTION}" in
<% for(var i=0; i<options.length; i++) {-%>
<% if (options[i].varShort.length) {-%>
        <%= options[i].varShort %>)
          _ARGSHIFT="${OPTIND}"
          <%= options[i].varName%>=${OPTARG}
          ;;
<% } -%><% } -%>
<% for(var i=0; i<flags.length; i++) {-%>
<% if (flags[i].varShort.length) {-%>
        <%= flags[i].varShort %>)
          _ARGSHIFT="${OPTIND}"
          <%= flags[i].varName%>=<%= flags[i].varValue%>
          ;;
<% } -%><% } -%>
        -)
          case "${OPTARG}" in
            help) usage && exit 0;;
            version) echo "$_VERSION" && exit 0;;
<% for(var i=0; i<flags.length; i++) {-%>
<% if (flags[i].varLong.length) {-%>
            <%= flags[i].varLong %>)
              <%= flags[i].varName%>=<%= flags[i].varValue%>
              _ARGSHIFT="${OPTIND}"
              ;;
<% } -%><% } -%>
<% for(var i=0; i<options.length; i++) {-%>
<% if (options[i].varLong.length) {-%>
            <%= options[i].varLong %>)
              eval <%= options[i].varName%>="\$$OPTIND"; OPTIND=$(( OPTIND + 1 ))
              _ARGSHIFT="${OPTIND}"
              if [ -z "$<%= options[i].varName%>" ] && [ -z "$_SILENT" ]; then
                error "option requires an argument -- ${OPTARG}" usage 1
              fi
              ;;
            <%= options[i].varLong %>=*)
              <%= options[i].varName%>=${OPTARG#*=}
              _ARGSHIFT="${OPTIND}"
              if [ -z "$<%= options[i].varName%>" ] && [ -z "$_SILENT" ]; then
              _OPTNAME=${OPTARG%=$<%= options[i].varName%>}
                error "option requires an argument -- ${_OPTNAME}" usage 1
              fi
              ;;
<% } -%><% } -%>
            *)
              if [ "$OPTERR" = 1 ] && [ -z "$_SILENT" ]; then
                error "illegal option -- ${OPTARG}" usage 1
              fi
              ;;
            esac;;
       \?)
          # VERBOSE MODE
          # invalid option: _OPTION is set to ? (question-mark) and OPTARG is unset
          # required argument not found: _OPTION is set to ? (question-mark), OPTARG is unset and an error message is printed
          [ -z "$_SILENT" ] && usage && exit 1
          # SILENT MODE
          # invalid option: _OPTION is set to ? (question-mark) and OPTARG is set to the (invalid) option character
          [ ! -z "$_SILENT" ] && echo "illegal option -- ${OPTARG}"
          ;;
        :)
          # SILENT MODE
          # required argument not found: _OPTION is set to : (colon) and OPTARG contains the option-character in question
          echo "option requires an argument -- ${OPTARG}"
          ;;
      esac
    done
}
